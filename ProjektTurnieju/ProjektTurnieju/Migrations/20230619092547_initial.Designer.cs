// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektTurnieju.Data;

#nullable disable

namespace ProjektTurnieju.Migrations
{
    [DbContext(typeof(TurniejDBContext))]
    [Migration("20230619092547_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjektTurnieju.Models.Druzyna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KapitanDruzynyId")
                        .HasColumnType("int");

                    b.Property<string>("NazwaDruzyny")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KapitanDruzynyId");

                    b.ToTable("Druzyny");
                });

            modelBuilder.Entity("ProjektTurnieju.Models.Ogloszenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDodania")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ogloszenia");
                });

            modelBuilder.Entity("ProjektTurnieju.Models.Uzytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdRoli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uzytkownicy");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Uzytkownik");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ProjektTurnieju.Models.Zawodnik", b =>
                {
                    b.HasBaseType("ProjektTurnieju.Models.Uzytkownik");

                    b.Property<bool>("CzyMaDruzyne")
                        .HasColumnType("bit");

                    b.Property<int?>("DruzynaId")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("DruzynaId");

                    b.HasDiscriminator().HasValue("Zawodnik");
                });

            modelBuilder.Entity("ProjektTurnieju.Models.Druzyna", b =>
                {
                    b.HasOne("ProjektTurnieju.Models.Zawodnik", "KapitanDruzyny")
                        .WithMany()
                        .HasForeignKey("KapitanDruzynyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KapitanDruzyny");
                });

            modelBuilder.Entity("ProjektTurnieju.Models.Zawodnik", b =>
                {
                    b.HasOne("ProjektTurnieju.Models.Druzyna", null)
                        .WithMany("Zawodnicy")
                        .HasForeignKey("DruzynaId");
                });

            modelBuilder.Entity("ProjektTurnieju.Models.Druzyna", b =>
                {
                    b.Navigation("Zawodnicy");
                });
#pragma warning restore 612, 618
        }
    }
}
